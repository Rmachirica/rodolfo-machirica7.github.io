// /////////////////////////////////////////////////////////////////////////////
// flatten /////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function flatten(array) {
  // iterate through arr
var flattened = array.reduce(function(flat, currentValue, index, array) {
     return flat.concat(currentValue);
},[]);
return flattened;
}

// /////////////////////////////////////////////////////////////////////////////
// loop ////////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function loop(start, test, update, body) {
for (let value = start; test(value); value = update(value)) {
 body(value);
  
}
}

// /////////////////////////////////////////////////////////////////////////////
// every ///////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function every(array, test) {
for (var element of array) {
  if (!test(element)) {
    return false;
  } 
}
return true;
}

// /////////////////////////////////////////////////////////////////////////////
// dominantDirection ///////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function dominantDirection(text) {
  var characterCount = countBy(text, char => {
    var word = characterScript(char.codePointAt(0));
    return word ? word.direction : "none";
  }).filter(name => name != "none");

  if (characterCount.length == 0) return "ltr";

  return characterCount.reduce(function(accumulator, currentValue) {
   return accumulator.count > currentValue.count ? accumulator : currentValue}).name;
}

// /////////////////////////////////////////////////////////////////////////////
//  //////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    flatten,
    loop,
    every,
    dominantDirection,
  };
};
